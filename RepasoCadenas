c="cadena"
print(type(c))#Type para conocer el tipo de variable
s="para una comilla dentro de la cadena usamos el back slash \" y así se muestra al imprimir"
print(s)
s="para saltos de linea, usamos \npor ejemplo"
print(s)
print("\110")#110 corresponde al caracter H
print(r"\110")#la r al principio, hace referencia a la función raw strings
print("""tanto para bloques de comentarios
como para prints de varias lineas,
podemos usar triples comillas""")
print("------")
#Formato de cadenas
x=5
s="El numero es: " + str(x) #una manera de concatenar un int en una cadena volviendolo string
print(s)
x=5
s="El numero es: %d" % x #Manera de concatenar un int en una cadena conservandolo int
print(s)
s="1 los numeros son %d y %d"%(5,10) #una manera de concatenar varios int conservandolos int
print(s)
s="2 los numeros son {} y {}".format(5,10) #otra manera de concatenar varios int conservandolos int
print(s)
s="3 los numeros son {a} y {b}".format(a=5,b=10) #otra manera de concatenar varios int conservandolos int
print(s)
a=5
b=10
s=f"4 los numeros son {a} y {b}" #otra manera de concatenar varios int conservandolos int
print(s)
print(f"5 los numeros son {a} y {b}")#otra manera de concatenar varios int conservandolos int
print("------")
#Funciones en String
a=7;f=8
print(f"la suma de {a}+{f} es igual a: {a+f}")
#Llamar funciones en un string
def funciones():
    return 50
print(f"El número es {funciones()}")
print("------")
#Concatenaciones
s="primero "
d="segundo"
print(s+""+d)
print("------")
#Multiplicar un string
print(s*3)
print("------")
#Comprobar si una palabra está en una cadena
print("perro" in "me mordió el perro") #Responde true o false
print("------")
#convertir entre caracteres y volar numerico
print(chr(550))#pasa el numero a caracter
print(ord("d"))#pasa el caracter a valor numerico
print("------")
#longitud
s="Me mordió el perro"
print(len(s))
print("------")
#Tomar las cadenas de texto como si fueran listas
print(s[0])
print(s[10])
print("------")
#Recorrer un string
"""
x=len(s)
c=""
for i in  range(0,x):
    print(s[i])
print("------")
for i in  range(0,x):
    c+=s[i]
    print(c)
"""

#Funciones en str
#capitalize para devolver la primera letra en mayuscula
k="el perro me mordió"
print(k.capitalize())

#Lower para volver todas las letras minuscuias
S="El Perro Me Mordió"
print(s.lower())

#swapcase para volver las minusculas a mayusculas o al contrario
l="eL PeRro mE mordIó"
print(l.swapcase())

#upper para volver todas las minusculas a mayusculas
print(k.upper())

#Count permite contar las veces que una cadena se encuentra dentro de otra cadena
#count(<sub>[, <start>[, <end>]])
m="anita la huerfanita tiene una hermanita"
print(m.count("ani"))

#isalnum() devuelve true si en la cadena solo hay numeros, false si tiene letras o tiene caracteres especiales @%&/, false si los tiene
o="12345"
k="alguna vez sabrás"
print(o.isalnum())
print(k.isalnum())

#isalpha() es lo contrario de isalnum()
o="12345"
k="algunavezsabras"
print(o.isalpha())
print(k.isalpha())#no toma los espacios como letras así que si hay espacios, dará falso

#strip para eliminar los espacios en las cadenas. util para limpiar cadenas
print(m.strip())

#zfill rellena la cadena a la izquierda con ceros hasta llegar al numero que se le da
print(o.zfill(7))

#join une a cada parametro en una lista la primera cadena que se le da
l=["1","2","3","4"]
s=" y ".join(l)
print(s)

#split divide la cadena el numeroo de veces que se le indique o que esté presente un caracter divisor
d="estar,en,tu,lugar,y,tu,en,el,mio"
print(d.split(","))

"""https://ellibrodepython.com/cadenas-python#:~:
text=Las%20cadenas%20en%20Python%20o,el%20comando%20help(str)
.&text=Tambi%C3%A9n%20es%20valido%20declarar%20las%20cadenas
%20con%20comillas%20simples%20simples%20'%20.
"""


